{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["clips","key","url","App","id","className","map","sound","index","text","audio","DrumPad","props","playSound","current","play","parent","parentNode","classList","add","querySelector","innerText","React","createRef","this","addEventListener","e","target","remove","onClick","ref","src","Component","document","toUpperCase","getElementById","currentTime","ReactDOM","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"2OAIMA,EAAQ,CACZ,CACEC,IAAK,IACLC,IAAK,4DAEP,CACED,IAAK,IACLC,IAAK,4DAEP,CACED,IAAK,IACLC,IAAK,4DAEP,CACED,IAAK,IACLC,IAAK,8DAEP,CACED,IAAK,IACLC,IAAK,4DAEP,CACED,IAAK,IACLC,IAAK,0DAEP,CACED,IAAK,IACLC,IAAK,8DAEP,CACED,IAAK,IACLC,IAAK,8DAEP,CACED,IAAK,IACLC,IAAK,2DAIHC,EAAM,kBACV,sBAAKC,GAAG,UAAUC,UAAU,UAA5B,UACE,gDACCL,EAAMM,KAAI,SAACC,EAAOC,GAAR,OACT,cAAC,EAAD,CAASC,KAAMF,EAAMN,IAAiBS,MAAOH,EAAML,KAApBM,UAK/BG,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAYRC,UAAY,WACV,EAAKH,MAAMI,QAAQC,OAEnB,IAAMX,EAAK,EAAKM,MAAMI,QAAQV,GAExBY,EAAS,EAAKN,MAAMI,QAAQG,WAClCD,EAAOE,UAAUC,IAAI,UAELH,EAAOC,WACfG,cAAc,MAAMC,UAA5B,UAA2CjB,EAA3C,kBAnBA,EAAKM,MAAQY,IAAMC,YAHF,E,qDAMnB,WACEC,KAAKd,MAAMI,QAAQW,iBAAiB,SAAS,SAACC,GAC7BA,EAAEC,OAAOV,WACjBC,UAAUU,OAAO,e,oBAgB5B,WACE,MAAwBJ,KAAKZ,MAArBH,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OACE,sBAAKL,UAAU,WAAWwB,QAASL,KAAKX,UAAWT,GAAE,eAAUK,GAA/D,UACGA,EACD,uBAAOqB,IAAKN,KAAKd,MAAOqB,IAAKrB,EAAOL,UAAU,OAAOD,GAAIK,W,GAhC3Ca,IAAMU,WAsC5BC,SAASR,iBAAiB,WAAW,SAACC,GACpC,IAAMtB,EAAKsB,EAAEzB,IAAIiC,cACXxB,EAAQuB,SAASE,eAAe/B,GAEtC,GAAGM,EAAO,CACRA,EAAM0B,YAAc,EACpB,IAAMpB,EAASN,EAAMO,WACrBD,EAAOE,UAAUC,IAAI,UAELH,EAAOC,WACfG,cAAc,MAAMC,UAA5B,UAA2CjB,EAA3C,iBACAM,EAAMK,WAKVsB,IAASC,OAAO,cAAC,EAAD,IAASL,SAASE,eAAe,iBAElChC,QChGAoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdH,IAASC,OACP,cAAC,IAAMU,WAAP,UACE,cAAC,EAAD,MAEFf,SAASE,eAAe,SAM1BI,K","file":"static/js/main.09e336fc.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\n\nconst clips = [\n  {\n    key: 'Q',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\n  },\n  {\n    key: 'W',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\n  },\n  {\n    key: 'E',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\n  },\n  {\n    key: 'A',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\n  },\n  {\n    key: 'S',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\n  },\n  {\n    key: 'D',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\n  },\n  {\n    key: 'Z',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\n  },\n  {\n    key: 'X',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\n  },\n  {\n    key: 'C',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\n  },\n];\n\nconst App = () => (\n  <div id=\"display\" className=\"display\">\n    <h1>Drum Machinery</h1>\n    {clips.map((sound, index) => (\n      <DrumPad text={sound.key} key={index} audio={sound.url} />\n    ))}\n  </div>\n);\n\nclass DrumPad extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.audio = React.createRef();\n  }\n  \n  componentDidMount() {\n    this.audio.current.addEventListener('ended', (e) => {\n      const parent = e.target.parentNode;\n      parent.classList.remove('active');\n    });\n  }\n  \n  playSound = () => {\n    this.audio.current.play();\n    \n    const id = this.audio.current.id;\n    \n    const parent = this.audio.current.parentNode;\n    parent.classList.add('active');\n    \n    const display = parent.parentNode;\n    display.querySelector('h1').innerText = `${id} is in Effect`;\n  }\n  \n  render() {\n    const { text, audio } = this.props;\n    \n    return (\n      <div className=\"drum-pad\" onClick={this.playSound} id={`drum-${text}`}>\n        {text}\n        <audio ref={this.audio} src={audio} className=\"clip\" id={text} />\n      </div>\n    )\n  }\n}\n    \ndocument.addEventListener('keydown', (e) => {\n  const id = e.key.toUpperCase();\n  const audio = document.getElementById(id);\n  \n  if(audio) {\n    audio.currentTime = 0;\n    const parent = audio.parentNode;\n    parent.classList.add('active');\n    \n    const display = parent.parentNode;\n    display.querySelector('h1').innerText = `${id} is in Effect`;\n    audio.play();\n  }\n});\n\n\nReactDOM.render(<App />, document.getElementById('drum-machine'));\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './style.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}